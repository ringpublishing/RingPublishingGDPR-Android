apply plugin: 'maven-publish'

def LIB_GROUP_ID = 'com.ringpublishing'
def LIB_ARTIFACT_ID = 'gdpr'
def LIB_VERSION = "$sdk_version_name"

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/ringpublishing/RingPublishingGDPR-Android")
            credentials {
                username = System.getenv('GITHUB_USER') ?: ""
                password = System.getenv('GITHUB_PERSONAL_ACCESS_TOKEN') ?: ""
            }
        }
    }
    publications {
        RingPublishingGDPR(MavenPublication) {
            groupId LIB_GROUP_ID
            artifactId LIB_ARTIFACT_ID
            version LIB_VERSION
            artifact("$buildDir/outputs/aar/RingPublishingGDPR-release.aar")
            artifact(sourceJar)

            pom.withXml {
                // for dependencies and exclusions
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dp.group)
                    dependencyNode.appendNode('artifactId', dp.name)
                    dependencyNode.appendNode('version', dp.version)

                    // for exclusions
                    if (dp.excludeRules.size() > 0) {
                        def exclusions = dependencyNode.appendNode('exclusions')
                        dp.excludeRules.each { ExcludeRule ex ->
                            def exclusion = exclusions.appendNode('exclusion')
                            exclusion.appendNode('groupId', ex.group)
                            exclusion.appendNode('artifactId', ex.module)
                        }
                    }
                }
            }
        }

    }
}